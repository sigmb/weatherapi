/**
 * OpenWeatherMap API
 * Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `current` endpoint only from the OpenWeatherMap API. <br/><br/> **Note**: All parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the `id` parameter) will provide the most precise location results.
 *
 * OpenAPI spec version: 2.5
 * Contact: some_email@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Clouds', 'model/Coord', 'model/Main', 'model/Model200', 'model/Rain', 'model/Snow', 'model/Sys', 'model/Weather', 'model/Wind', 'api/CurrentWeatherDataApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Clouds'), require('./model/Coord'), require('./model/Main'), require('./model/Model200'), require('./model/Rain'), require('./model/Snow'), require('./model/Sys'), require('./model/Weather'), require('./model/Wind'), require('./api/CurrentWeatherDataApi'));
  }
}(function(ApiClient, Clouds, Coord, Main, Model200, Rain, Snow, Sys, Weather, Wind, CurrentWeatherDataApi) {
  'use strict';

  /**
   * Get_the_current_weather_daily_forecast_for_16_days_and_a_three_hour_interval_forecast_for_5_days_for_your_city__Helpful_stats_graphics_and_this_day_in_history_charts_are_available_for_your_reference__Interactive_maps_show_precipitation_clouds_pressure_wind_around_your_location_stations__Data_is_available_in_JSON_XML_or_HTML_format__Note_This_sample_Swagger_file_covers_the_current_endpoint_only_from_the_OpenWeatherMap_API__brbr_Note_All_parameters_are_optional_but_you_must_select_at_least_one_parameter__Calling_the_API_by_city_ID__using_the_id_parameter_will_provide_the_most_precise_location_results_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var OpenWeatherMapApi = require('index'); // See note below*.
   * var xxxSvc = new OpenWeatherMapApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new OpenWeatherMapApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new OpenWeatherMapApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new OpenWeatherMapApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.5
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Clouds model constructor.
     * @property {module:model/Clouds}
     */
    Clouds: Clouds,
    /**
     * The Coord model constructor.
     * @property {module:model/Coord}
     */
    Coord: Coord,
    /**
     * The Main model constructor.
     * @property {module:model/Main}
     */
    Main: Main,
    /**
     * The Model200 model constructor.
     * @property {module:model/Model200}
     */
    Model200: Model200,
    /**
     * The Rain model constructor.
     * @property {module:model/Rain}
     */
    Rain: Rain,
    /**
     * The Snow model constructor.
     * @property {module:model/Snow}
     */
    Snow: Snow,
    /**
     * The Sys model constructor.
     * @property {module:model/Sys}
     */
    Sys: Sys,
    /**
     * The Weather model constructor.
     * @property {module:model/Weather}
     */
    Weather: Weather,
    /**
     * The Wind model constructor.
     * @property {module:model/Wind}
     */
    Wind: Wind,
    /**
     * The CurrentWeatherDataApi service constructor.
     * @property {module:api/CurrentWeatherDataApi}
     */
    CurrentWeatherDataApi: CurrentWeatherDataApi
  };

  return exports;
}));
